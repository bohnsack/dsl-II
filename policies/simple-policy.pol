a1 = activity(:play)    { true }
a2 = activity(:record)  { true }
a3 = activity(:stop)    { true }

c1 = constraint { true }
c2 = constraint { |c| true }
c3 = constraint { |c, a| true }

ra1 = restrict a1 do
  with c1
end

ra2 = restrict a2 do
  with c2, c3
end

ra3 = restrict a3 do
  with c1, c3
end

ra4 = restrict a1, a3 do
  with c1, c2, c3
end

ra5 = restrict a3 do
  with c1, c3
end

ra6 = restrict a1, a3 do
  with c1, c2, c3
end

p_cc = policy do
	policy_evaluators :lamport, :temporal
	constraint_evaluators :predicate
	
	permit_when ra1, ra3, ra5
	permit :when => [ra1, ra3, ra5]
	permit do
		when ra1, ra3, ra5
	end
	
	|| [ra1, ra2]
	
	obligate ra1, :with => ra2
	obligate ra2, ra3, :with => [ra5, ra6]
	
	obligate ra1 do
		with ra2
	end
	obligate ra2, ra3 do
		with ra5, ra6
	end
end

p_cc = policy do
	policy_evaluator :cc
end

p_xrml = policy do
	policy_evaluator :xrml
end

cc_2_xrml_out = p_cc.xrml
xrml_2_cc_out = p_xrml.cc
